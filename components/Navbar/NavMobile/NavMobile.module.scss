@use 'styles/variables.module';

.container {
	display: flex;
	height: 48px;
	width: 48px;
	margin: auto 0 auto auto;
	padding-top: 0.3rem;
	position: relative;
	z-index: 10;
	cursor: pointer;

	&Box {
		width: 32px;
		height: 32px;
		margin: auto;
		background-color: transparent;
		position: relative;

		&Body {
			position: absolute;
			width: 100%;
			height: 100%;
			top: 0;
			left: 0;
			cursor: pointer;

			span {
				display: block;
				width: 100%;
				box-shadow: 0 2px 10px 0 rgba(0, 0, 0, 0.3);
				border-radius: 3px;
				height: 3px;
				background: variables.$white;
				transition: all 0.3s;
				position: relative;

				& + span {
					margin-top: 7px;
				}

				&:nth-of-type(2) {
					height: 3.2px;
				}

				&:last-of-type {
					margin-top: 7px;
				}
			}

			&Active {
				& span:nth-child(1) {
					animation: ease 0.7s top forwards;
				}

				& span:nth-child(2) {
					animation: ease 0.7s scaled forwards;
				}

				& span:nth-child(3) {
					animation: ease 0.7s bottom forwards;
				}
			}

			&Deactive {
				& span:nth-child(1) {
					animation: ease 0.7s top-2 forwards;
				}

				& span:nth-child(2) {
					animation: ease 0.7s scaled-2 forwards;
				}

				& span:nth-child(3) {
					animation: ease 0.7s bottom-2 forwards;
				}
			}
		}
	}

	&Nav {
		position: absolute;
		top: 0;
		right: 0;
		width: 100vw;
		height: 100vh;
		z-index: 9;
		background-color: variables.$primary;

		@include variables.media('>sm') {
			width: 400px;
		}

		&Body {
			position: relative;
			top: 40%;
			left: 50%;
			transform: translate(-50%, -50%);
			display: flex;
			flex-direction: column;
			padding: 0;
			text-align: center;

			&Link {
				&:not(:last-of-type) {
					margin-bottom: 3rem;
				}

				&Item {
					display: inline-block;
					color: variables.$white;
					transition: variables.$transition-color;
					position: relative;

					&:hover {
						color: variables.$secondary;
						border-color: variables.$secondary;
					}

					&::after {
						content: '';
						position: absolute;
						left: 50%;
						transform: translateX(-50%);
						display: block;
						width: 0%;
						height: 2px;
						margin: 0.2rem 0 0;
						background: variables.$secondary;
						transition: variables.$transition;
					}

					&:hover::after {
						width: 120%;
					}

					&[data-current='true']::after {
						width: 120%;
					}
				}
			}
		}
	}
}

@keyframes top {
	0% {
		top: 0;
		transform: rotate(0);
	}
	50% {
		top: 9px;
		transform: rotate(0);
	}
	100% {
		top: 9px;
		transform: rotate(45deg);
	}
}

@keyframes top-2 {
	0% {
		top: 22px;
		transform: rotate(45deg);
	}
	50% {
		top: 22px;
		transform: rotate(0deg);
	}
	100% {
		top: 0;
		transform: rotate(0deg);
	}
}

@keyframes bottom {
	0% {
		bottom: 0;
		transform: rotate(0);
	}
	50% {
		bottom: 12px;
		transform: rotate(0);
	}
	100% {
		bottom: 12px;
		transform: rotate(135deg);
	}
}

@keyframes bottom-2 {
	0% {
		bottom: 12px;
		transform: rotate(135deg);
	}
	50% {
		bottom: 12px;
		transform: rotate(0);
	}
	100% {
		bottom: 0;
		transform: rotate(0);
	}
}

@keyframes scaled {
	50% {
		transform: scale(0);
	}
	100% {
		transform: scale(0);
	}
}

@keyframes scaled-2 {
	0% {
		transform: scale(0);
	}
	25% {
		transform: scale(0);
	}
	50% {
		transform: scale(0);
	}
	75% {
		transform: scale(0);
	}
	100% {
		transform: scale(1);
	}
}
